{
    "openapi": "3.0.0",
    "info": {
        "title": "Customer Relationship Management API Documentation",
        "description": "Project created as a sample project for Gapstars",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "CRM API Server"
        },
        {
            "url": "http://127.0.0.1:8000/api"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login the user",
                "description": "Login the user",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "description": "Logout the authenticated user",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get list of customers",
                "description": "Returns list of customers",
                "operationId": "getCustomerList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Store new customers",
                "description": "Returns customers data",
                "operationId": "storeCustomer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCustomerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer information",
                "description": "Returns customer data",
                "operationId": "getCustomerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update existing customer",
                "description": "Returns updated customer data",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCustomerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete existing customer",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CreateCustomerRequest": {
                "title": "Store Customer request",
                "description": "Store Customer request body data",
                "properties": {
                    "first_name": {
                        "title": "first_name",
                        "description": "First name of the new customer",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "Last name of the new customer",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the new customer",
                        "type": "string",
                        "example": "admin@admin.com"
                    },
                    "phone_number": {
                        "title": "phone_number",
                        "description": "Phone number of the new customer",
                        "type": "string",
                        "example": "94773333333"
                    },
                    "bulk": {
                        "title": "Bulk",
                        "description": "CSV file to create / update customers",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login user request",
                "description": "Login user request body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "admin@admin.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "passowrd of the customer",
                        "type": "string",
                        "example": "Admin@123"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "title": "Customer",
                "description": "Customer model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "first_name": {
                        "title": "First Name",
                        "description": "First name of the new customer",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "description": "Last name of the new customer",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the new customer",
                        "type": "string",
                        "example": "admin@admin.com"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "description": "Phone number of the new customer",
                        "type": "string",
                        "example": "94773333333"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-01-01 00:00:01"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-01-01 00:00:01"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Customer"
                }
            },
            "Login": {
                "title": "Login",
                "description": "Login model",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Response message",
                        "type": "integer",
                        "example": "Successfully logged in"
                    },
                    "token": {
                        "title": "Token",
                        "description": "Token of logged in user",
                        "type": "string",
                        "example": "1|DFhE1owmYYobMAMgfILjSRuMZz0BRkgqQn3tdvvd"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Login"
                }
            },
            "Logout": {
                "title": "Logout",
                "description": "Logout model",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Response message",
                        "type": "integer",
                        "example": "Successfully logged out"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Logout"
                }
            },
            "CustomerResource": {
                "title": "CustomerResource",
                "description": "Customer resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Customer"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomerResource"
                }
            },
            "LoginResource": {
                "title": "LoginResource",
                "description": "Login resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Login"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LoginResource"
                }
            },
            "LogoutResource": {
                "title": "LogoutResource",
                "description": "Logout resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Logout"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LogoutResource"
                }
            },
            "UpdateCustomerRequest": {
                "title": "Store Customer request",
                "description": "Store Customer request body data",
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "phone_number"
                ],
                "properties": {
                    "first_name": {
                        "title": "first_name",
                        "description": "First name of the new customer",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "Last name of the new customer",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the new customer",
                        "type": "string",
                        "example": "admin@admin.com"
                    },
                    "phone_number": {
                        "title": "phone_number",
                        "description": "Phone number of the new customer",
                        "type": "string",
                        "example": "94773333333"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Login with email and password to get the authentication token",
                "name": "Authorization",
                "scheme": "bearer",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints of Authentication"
        },
        {
            "name": "Customers",
            "description": "API Endpoints of Customers Relationship Management"
        }
    ],
    "security": [
        []
    ]
}